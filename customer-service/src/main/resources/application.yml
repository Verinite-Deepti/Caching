spring:
  application:
    name: customer-service

  zipkin:
    base-url: http://localhost:9411
    # Uncomment and configure if using a specific sender type
    # sender:
    #   type: web

  sleuth:
    sampler:
      probability: 1.0
  boot:
    admin:
      client:
          url: http://localhost:8000
  cloud:
    stream:
      bindings:
       input:
         group: mydestination
  kafka:
    bootstrap-servers:
      - localhost:9092
    producer:
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: abc
  cache:
    type: redis
    redis:
      cache-null-values: false
      use-key-prefix: true
      key-prefix: library
      time-to-live: 10s
  redis:
    host: localhost
    port: 6379
    timeout: 10000
## Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
      
# Enable this for high availability - Setup Eureka Clustering
#eureka:
#  client:
#    service-url:
#      defaultZone: http://eureka-1-server.com:9001/eureka,http://eureka-2-server.com:9002/eureka,http://eureka-3-server.com:9003/eureka

server:
  port: 7001

# For RabbitMQ
rabbitmq:
   broker:
     url: tcp://127.0.0.1:5672
     username: guest
     password: guest

logging:
  level:
    root: INFO
       
  file:
    name: customer-service.log
    max-history: 5
    max-size: 10MB

creditcard:
  service:
    url: http://localhost:7002

management:
  endpoints:
    web:
      exposure:
        include: '*'
#         can add 
#       - hystrix.stream,beans,mappings,health 
  endpoint:
    health:
      show-details: always

info:
  app:
    name: Customer Service Application
    version: 1.8
    description: This is Customer Service Application
    author: xyz


  